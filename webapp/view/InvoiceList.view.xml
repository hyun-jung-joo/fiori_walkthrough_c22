<mvc:View
    controllerName="ui5.walkthrough_c22.controller.InvoiceList"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:core="sap.ui.core"
>
    <!-- 정렬과 그룹화를 지정할 건데, tutorial이랑 다르게 
        ShipperName으로 그룹화 하고, ProductName 으로 내림차순 정렬함 -->
    <List
        id="invoiceList"
        headerText="{i18n>invoiceListTitle}"
        class="sapUiResponsiveMargin"
        width="auto"
        items="{
            path: 'invoice>/Invoices', 
            sorter : [
                { path : 'ShipperName',  group : true }, 
                { path: 'ProductName', descending : true }
            ]
        }"
    >
        <!-- headerToobar 생성 -->
        <headerToolbar>
            <Toolbar>
                <Title text="{i18n>invoiceListTitle}" />
                <!-- 양끝으로 다 밀어버리기-->
                <ToolbarSpacer />
                <!-- 검색바를 생성하고, 검색할 때의 이벤트 핸들러도 지정(search) -->
                <SearchField
                    width="50%"
                    search=".onFilterInvoices"
                />
            </Toolbar>
        </headerToolbar>

        <items>
            <!--
                item 을 선택가능하게 만들기 위해 type을 Navigation 또는 Action 으로 지정. 
                press 했을 때 onPress 메소드가 실행되도록 한다. 
            -->
            <ObjectListItem
                title="{invoice>Quantity} x {invoice>ProductName}"
                number="{
                    parts : [
                        'invoice>ExtendedPrice', 
                        'view>/currency'
                    ], 
                    type : 'sap.ui.model.type.Currency',
                    formatOptions : {
                        showMeasure : false
                    }
                }"
                numberUnit="{view>/currency}"
                numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success'}"
                type="Navigation"
                press=".onPress"
            >
                <firstStatus>
                    <!-- 
                        path에 정해진 값을 statusText의 파라미터(sStatus)로 넘겨준다
                        formatter 안에서 this를 쓰고 싶다면 어떤 컨트롤러 인지 bind를 통해 넘겨줘야 한다. 
                        그 후에 formatter 에서 나온 결과 값을 다시 받아서 Status 로 출력한다. 

                        core:require 로는 외부에서 값을 읽어 올 수 있다. (여기서는 formatter.js에서 값을 가져옴)
                    -->
                    <ObjectStatus
                        core:require="{
                        Formatter : 'ui5/walkthrough_c22/model/formatter'
                    }"
                        text="{ 
                        path: 'invoice>Status', 
                        formatter : 'Formatter.statusText.bind($controller)'
                    }"
                    />
                </firstStatus>
            </ObjectListItem>
        </items>
    </List>
</mvc:View>
